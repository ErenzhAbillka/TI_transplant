/**
 * These arguments were used when this file was generated. They will be automatically applied on subsequent loads
 * via the GUI or CLI. Run CLI with '--help' for additional information on how to override these arguments.
 * @cliArgs --device "MSPM0G350X" --part "Default" --package "LQFP-64(PM)" --product "mspm0_sdk@2.05.01.01"
 * @v2CliArgs --device "MSPM0G3507" --package "LQFP-64(PM)" --product "mspm0_sdk@2.05.01.01"
 * @versions {"tool":"1.24.0+4110"}
 */

/**
 * Import the modules used in this configuration.
 */
const CAPTURE  = scripting.addModule("/ti/driverlib/CAPTURE", {}, false);
const CAPTURE1 = CAPTURE.addInstance();
const GPIO     = scripting.addModule("/ti/driverlib/GPIO", {}, false);
const GPIO1    = GPIO.addInstance();
const GPIO2    = GPIO.addInstance();
const GPIO3    = GPIO.addInstance();
const PWM      = scripting.addModule("/ti/driverlib/PWM", {}, false);
const PWM1     = PWM.addInstance();
const SYSCTL   = scripting.addModule("/ti/driverlib/SYSCTL");

/**
 * Write custom configuration values to the imported modules.
 */
CAPTURE1.$name               = "CAPTURE_0";
CAPTURE1.timerClkPrescale    = 256;
CAPTURE1.timerPeriod         = "10 ms";
CAPTURE1.interrupts          = ["OVERFLOW"];
CAPTURE1.ccp0PinConfig.$name = "ti_driverlib_gpio_GPIOPinGeneric4";

const Board = scripting.addModule("/ti/driverlib/Board", {}, false);

GPIO1.$name                   = "Motor";
GPIO1.port                    = "PORTA";
GPIO1.associatedPins.create(4);
GPIO1.associatedPins[0].$name = "leftDIR";
GPIO1.associatedPins[1].$name = "leftENABLE";
GPIO1.associatedPins[2].$name = "rightDIR";
GPIO1.associatedPins[3].$name = "rightENABLE";

GPIO2.$name                       = "findRoad";
GPIO2.port                        = "PORTB";
GPIO2.associatedPins.create(8);
GPIO2.associatedPins[0].$name     = "PIN_0";
GPIO2.associatedPins[0].direction = "INPUT";
GPIO2.associatedPins[1].$name     = "PIN_1";
GPIO2.associatedPins[1].direction = "INPUT";
GPIO2.associatedPins[2].$name     = "PIN_2";
GPIO2.associatedPins[2].direction = "INPUT";
GPIO2.associatedPins[3].$name     = "PIN_3";
GPIO2.associatedPins[3].direction = "INPUT";
GPIO2.associatedPins[4].$name     = "PIN_4";
GPIO2.associatedPins[4].direction = "INPUT";
GPIO2.associatedPins[5].$name     = "PIN_5";
GPIO2.associatedPins[5].direction = "INPUT";
GPIO2.associatedPins[6].$name     = "PIN_6";
GPIO2.associatedPins[6].direction = "INPUT";
GPIO2.associatedPins[7].$name     = "PIN_7";
GPIO2.associatedPins[7].direction = "INPUT";

GPIO3.$name                       = "Key";
GPIO3.port                        = "PORTB";
GPIO3.associatedPins.create(2);
GPIO3.associatedPins[0].$name     = "Key1";
GPIO3.associatedPins[0].direction = "INPUT";
GPIO3.associatedPins[1].$name     = "PIN_9";
GPIO3.associatedPins[1].direction = "INPUT";

PWM1.$name                              = "PWM_WHEEL";
PWM1.ccIndexCmpl                        = [0,1];
PWM1.clockDivider                       = 2;
PWM1.clockPrescale                      = 8;
PWM1.timerCount                         = 100;
PWM1.PWM_CHANNEL_0.$name                = "ti_driverlib_pwm_PWMTimerCC0";
PWM1.PWM_CHANNEL_1.$name                = "ti_driverlib_pwm_PWMTimerCC1";
PWM1.ccp0PinConfig.$name                = "ti_driverlib_gpio_GPIOPinGeneric0";
PWM1.ccp0PinConfig.direction            = scripting.forceWrite("OUTPUT");
PWM1.ccp0PinConfig.hideOutputInversion  = scripting.forceWrite(false);
PWM1.ccp0PinConfig.onlyInternalResistor = scripting.forceWrite(false);
PWM1.ccp0PinConfig.passedPeripheralType = scripting.forceWrite("Digital");
PWM1.ccp1PinConfig.$name                = "ti_driverlib_gpio_GPIOPinGeneric1";
PWM1.ccp1PinConfig.direction            = scripting.forceWrite("OUTPUT");
PWM1.ccp1PinConfig.hideOutputInversion  = scripting.forceWrite(false);
PWM1.ccp1PinConfig.onlyInternalResistor = scripting.forceWrite(false);
PWM1.ccp1PinConfig.passedPeripheralType = scripting.forceWrite("Digital");
PWM1.ccp1Pin_cmplConfig.$name           = "ti_driverlib_gpio_GPIOPinGeneric2";
PWM1.ccp0Pin_cmplConfig.$name           = "ti_driverlib_gpio_GPIOPinGeneric3";

SYSCTL.forceDefaultClkConfig = true;

/**
 * Pinmux solution for unlocked pins/peripherals. This ensures that minor changes to the automatic solver in a future
 * version of the tool will not impact the pinmux you originally saw.  These lines can be completely deleted in order to
 * re-solve from scratch.
 */
CAPTURE1.peripheral.$suggestSolution          = "TIMA0";
CAPTURE1.peripheral.ccp0Pin.$suggestSolution  = "PA0";
Board.peripheral.$suggestSolution             = "DEBUGSS";
Board.peripheral.swclkPin.$suggestSolution    = "PA20";
Board.peripheral.swdioPin.$suggestSolution    = "PA19";
GPIO1.associatedPins[0].pin.$suggestSolution  = "PA17";
GPIO1.associatedPins[1].pin.$suggestSolution  = "PA14";
GPIO1.associatedPins[2].pin.$suggestSolution  = "PA13";
GPIO1.associatedPins[3].pin.$suggestSolution  = "PA12";
GPIO2.associatedPins[0].pin.$suggestSolution  = "PB22";
GPIO2.associatedPins[1].pin.$suggestSolution  = "PB21";
GPIO2.associatedPins[2].pin.$suggestSolution  = "PB20";
GPIO2.associatedPins[3].pin.$suggestSolution  = "PB19";
GPIO2.associatedPins[4].pin.$suggestSolution  = "PB18";
GPIO2.associatedPins[5].pin.$suggestSolution  = "PB17";
GPIO2.associatedPins[6].pin.$suggestSolution  = "PB16";
GPIO2.associatedPins[7].pin.$suggestSolution  = "PB15";
GPIO3.associatedPins[0].pin.$suggestSolution  = "PB14";
GPIO3.associatedPins[1].pin.$suggestSolution  = "PB13";
PWM1.peripheral.$suggestSolution              = "TIMA1";
PWM1.peripheral.ccp0Pin.$suggestSolution      = "PA10";
PWM1.peripheral.ccp0Pin_cmpl.$suggestSolution = "PA15";
PWM1.peripheral.ccp1Pin.$suggestSolution      = "PA11";
PWM1.peripheral.ccp1Pin_cmpl.$suggestSolution = "PA16";
SYSCTL.peripheral.$suggestSolution            = "SYSCTL";
